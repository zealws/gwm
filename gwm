#!/usr/bin/env bash

PROG=gwm
VERSION=1.0.1

function is_git_repo {
    git status &> /dev/null
    RESULT=$?
    if [[ $RESULT != 128 ]] ; then echo "true" ; fi
}

function execute {
    "$@" 2>&1 | sed "s/^/    /"
}

function print_usage {
    echo "$PROG v$VERSION"
    echo "Usage:"
    echo "    $PROG command"
    echo "    $PROG options command"
    echo
    echo "    options:"
    echo "        -s"
    echo "            Execute a shell command, rather than a git command."
    echo "        -w DIR"
    echo "            Set the workspace location."
    echo "        -h, --help, -v, --version"
    echo "            Print this help message and exit."
    echo "        --"
    echo "            Signifies the end of options. Any arguments after this point are"
    echo "            treated as part of the command."
    echo
    echo "    Set the WORKSPACE variable to change the default workspace location."
    exit 1
}

if [[ "$#" == "0" ]] ; then
    print_usage
fi

WS=$WORKSPACE
TYPE=git

while (( $# )) ; do
    if [[ "$1" == "-s" ]] ; then
        TYPE=shell
    elif [[ "$1" == "-w" ]] ; then
        shift
        WS=$1
    elif [[ "$1" == "-h" ]] ; then
        print_usage
    elif [[ "$1" == "--help" ]] ; then
        print_usage
    elif [[ "$1 " == "-v" ]] ; then
        print_usage
    elif [[ "$1 " == "--version" ]] ; then
        print_usage
    elif [[ "$1" == "--" ]] ; then
        shift
        break
    else
        break
    fi

    shift
done

COMMAND=

for ix in "$@" ; do
    if [ $COMMAND ] ; then
        COMMAND=("${COMMAND[@]}" "$ix")
    else
        COMMAND=("$ix")
    fi
done

if [[ "$WS" == "" ]] ; then
    echo "Workspace location not set."
    print_usage
fi

if [[ "$WS" == "." ]] ; then
    WS=$(pwd)
fi

for f in $(ls $WS)
do
    if [ -d $WS/$f ] ; then
        cd $WS/$f
        if [[ "$(is_git_repo)" ]] ; then
            echo "$f"
            if [[ "$TYPE" == "shell" ]] ; then
                execute "${COMMAND[@]}"
            elif [[ "$TYPE" == "git" ]] ; then
                execute git "${COMMAND[@]}"
            fi
        fi
    fi
    cd $WS
done
